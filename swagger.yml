swagger: '2.0'
info:
  description: Swagger defintion for the Yu-Shan API, part of the Anathema Project
  version: "1.0.0"
  title: Yu-Shan API
consumes:
  - "application/json"
produces:
  - "application/json"

host: api.yu-shan.com
schemes:
 - https
 - http
basePath: "/v1"

# Paths supported by the server application
paths:
  /{apikey}/entities:
    parameters:
      - $ref: "#/parameters/apikeyParam"
    get:
      operationId: "read_entities"
      tags:
        - "Entity"
      summary: "A list of one or many entities as specified by the query"
      description: "Read a list of entities"
      responses:
        200:
          $ref: '#/responses/entityResponse'
    put:
      operationId: "add_entities"
      tags:
        - "Entity"
      description: "Adds new entities"
      parameters:
        - $ref: '#/parameters/entityBody'
      responses:
        200:
          $ref: '#/responses/entityResponse'
    post:
      operationId: "modify_entities"
      tags: 
        - "Entity"
      description: "Modifies entities"
      parameters:
        - $ref: '#/parameters/entityBody'
      responses:
        200:
          $ref: '#/responses/entityResponse'
    delete:
      operationId: "remove_entities"
      tags: 
        - "Entity"
      description: "Modifies entities"
      parameters:
        - $ref: '#/parameters/entityBody'
      responses:
        200:
          $ref: '#/responses/entityResponse'
  /{apikey}/relationships:
    parameters:
      - $ref: "#/parameters/apikeyParam"
    get:
      operationId: "read_relationships"
      tags:
        - "Relationship"
      summary: "Read a list of relationships"
      description: "Read a list of relationships"
      responses:
        200:
          $ref: '#/responses/relationshipResponse'
    put:
      operationId: "add_relationships"
      tags:
        - "Relationship"
      description: "Adds new relationships"
      summary: "Adds new relationships"
      parameters:
        - $ref: '#/parameters/relationshipBody'
      responses:
        200:
          $ref: '#/responses/relationshipResponse'
    post:
      operationId: "modify_relationships"
      tags:
        - "Relationship"
      description: "Modify relationships"
      summary: "Modify relationships"
      parameters:
        - $ref: '#/parameters/relationshipBody'
      responses:
        200:
          $ref: '#/responses/relationshipResponse'
    delete:
      operationId: "remove_relationships"
      tags:
        - "Relationship"
      description: "Removes relationships"
      summary: "Removes relationships"
      parameters:
        - $ref: '#/parameters/relationshipBody'
      responses:
        200:
          $ref: '#/responses/relationshipResponse'

parameters:
  apikeyParam:
    name: apikey
    in: path
    required: true
    type: string
  entityBody:
    in: "body"
    name: "body"
    description: "An array of mixed entities"
    required: true
    schema:
      type: array
      items: 
        $ref: '#/definitions/Entity'
  relationshipBody:
    in: "body"
    name: "body"
    description: "an array of relationships"
    required: true
    schema:
      type: array
      items:
        $ref: '#/definitions/Relationship'


responses:
  entityResponse:
    description: "Response for an Entity modification or query request"
    schema:
      type: object
      properties:
        resp:
          $ref: '#/definitions/ResultResp'
        data:
          type: array
          items:
           $ref: '#/definitions/Entity'
        error:
          type: string
  relationshipResponse:
    description: "Response for an relationship query or modification"
    schema:
      type: object
      properties:
        resp:
          $ref: '#/definitions/ResultResp'
        data:
          type: array
          items:
           $ref: '#/definitions/Relationship'
        error:
          type: string

definitions:
  Entity:
    type: object
    additionalProperties: true
    discriminator: category
    properties:
      id:
        $ref: '#/definitions/EntityID'
      name:
        type: string
      description:
        type: string
      category:
        type: string
    required: 
      - name
      - category
      - id
  Relationship:
    type: object
    properties:
      id:
        type: string
      owner:
        $ref: '#/definitions/EntityID'
      property:
        $ref: '#/definitions/EntityID'
      detail:
        type: string
    required:
      - id
      - owner
      - property
  EntityID:
    type: string
  character:
    type: object
    allOf: 
      - $ref: '#/definitions/Entity'
      - type: object
        properties:
          subcategory:
            type: string
  rulebook:
    $ref: '#/definitions/Entity'
  rule:
    allOf:
      - $ref: '#/definitions/Entity'
      - type: object
        properties:
          subcategory: 
            type: string
          
          
  ResultResp:
    type: integer
    minimum: 0
    maximum: 10
       
    